version: '3.4'

services:
  #steammarketplace.authorizationwebapplication:
  #  image: ${DOCKER_REGISTRY-}steammarketplaceauthorizationwebapplication
  #  build:
  #    context: '.'
  #    dockerfile: 'SteamMarketplace.AuthorizationWebApplication/Dockerfile'
  #steammarketplace.authorizationwebapplication.seq:
  #  image: datalust/seq:latest
  #  environment:
  #    - ACCEPT_EULA=Y
  #steammarketplace.resourcewebapplication:
  #  image: ${DOCKER_REGISTRY-}steammarketplaceresourcewebapplication
  #  build:
  #    context: '.'
  #    dockerfile: 'SteamMarketplace.ResourceWebApplication/Dockerfile'
  #steammarketplace.resourcewebapplication.seq:
  #  image: datalust/seq:latest
  #  environment:
  #    - ACCEPT_EULA=Y
  #steammarketplace.vuejsapp:
  #  image: steammarketplacevuejsapp
  #  build:
  #      context: 'steam-marketplace-vue-js-app/'
  #      dockerfile: 'Dockerfile'
  #steammarketplace.postgres:
  #  image: postgres:14.4-alpine
  #  restart: always
  #  environment:
  #    POSTGRES_DB: ${POSTGRES_DB_NAME}
  #    POSTGRES_USER: ${POSTGRES_USER}
  #    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #  volumes:
  #    - ./steammarketplace.postgres:/var/lib/postgresql/data
  steammarketplace.portainer:
    image: portainer/portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer_data:/data
  steammarketplace.node.exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
  steammarketplace.prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    #command:
    #  - '--config.file=/etc/prometheus/prometheus.yml'
    #  - '--storage.tsdb.path=/prometheus'
    #  - '--web.console.libraries=/etc/prometheus/console_libraries'
    #  - '--web.console.templates=/etc/prometheus/consoles'
    #  - '--web.enable-lifecycle'
  steammarketplace.grafana:
    image: grafana/grafana
    volumes:
      - ./grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
  proxy:
    image: nginx:mainline
